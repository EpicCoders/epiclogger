.row
  - max_value = @chart_data.values.max
  = line_chart @chart_data , id: "chart", height: "200px", label: "Occurences", colors: ["black", "#000"], min: 0, max: max_value > 0 ? max_value : 10
.row
  .col-sm-7.col-md-8
    .panel.panel-default.exception
      .panel-heading Exception
      - valid_stacktrace = @issue.get_platform_frames != 'Missing stacktrace' && @issue.get_platform_frames.present?
      .panel-body{ class: "#{valid_stacktrace ? 'expand-box' : ''}" }
        - if valid_stacktrace
          #frame.accordion
            - @issue.get_platform_frames.each_with_index do |frame, index|
              .accordion-group
                .accordion-heading.heading
                  %a.accordion-toggle.collapsed{ href: '#' }
                    %i.icon-fixed-width.fa.fa-plus{"data-parent" => "#frame", "data-toggle" => "collapse", :href => "#collapse#{index}"}
                    = frame.get_culprit_string(with_lineno: true)
                .accordion-body.collapse{:style => "height: 0px;", :id => "collapse#{index}"}
                  .accordion-inner.content
                    %pre
                      %code{ class: @error.platform }
                        = frame._data[:pre_context] ? simple_format(frame._data[:pre_context].join('')).html_safe : ''
                        = frame._data[:context_line] ? simple_format(frame._data[:context_line], class: 'error-line').html_safe : ''
                        = frame._data[:post_context] ? simple_format(frame._data[:post_context].join('')).html_safe : ''

        %h5.text-center{style: "display:#{valid_stacktrace ? 'none' : 'block'}"} Missing stacktrace
        %p.read-more.text-center{style: "display:#{valid_stacktrace ? 'block' : 'none'}"}
          %a.btn.btn-default{:href => "#"} View full backtrace
  .col-sm-5.col-md-4.pull-right
    .panel.panel-default
      .panel-heading Details
      .panel-body
        %dl
          %dt Occured at
          %dd= @issue.created_at
          %dt First seen at
          %dd= @error.first_seen
          %dt Url
          %dd=@issue.get_interfaces(:http)._data[:url]
          %dt File
          %dd= @error.culprit
          %dt User Agent
          %dd= @issue.get_headers(:user_agent)
          %dt ID
          %dd= @issue.event_id
          %dt Level
          %dd= @error.level
          %dt Logger
          %dd= @error.platform
  - valid_stacktrace = @issue.breadcrumbs_stacktrace != 'Missing crumbs' && @issue.breadcrumbs_stacktrace.present?
  - if valid_stacktrace
    .col-sm-7.col-md-8
      .panel.panel-default
        .panel-heading Breadcrumbs
        .panel-body{ class: "#{valid_stacktrace ? 'expand-box' : ''}" }
          #frame.accordion
            %pre
              %code
                %table.table
                  - @issue.breadcrumbs_stacktrace.each_with_index do |crumb, index|
                    %tr
                      - level = crumb[:level].present?
                      %td{ class: level ? "#{crumb[:level]}-line" : "log-line"}= crumb[:category]
                      %td= crumb[:message]
                      %td= Time.at(crumb[:timestamp]).strftime("%H:%M:%S")
          %h5.text-center{style: "display:#{valid_stacktrace ? 'none' : 'block'}"} Missing crumbs
          %p.read-more.text-center{style: "display:#{valid_stacktrace ? 'block' : 'none'}"}
            %a.btn.btn-default{:href => "#"} View full backtrace

  .col-sm-7.col-md-8
    .panel.panel-default.broadcast{ :style => "display:#{ @error.website.users.empty? ? 'none' : 'block' }" }
      .panel-heading
        Broadcast
      .panel-body
        .subscribers
          - @error.website.users.limit(10).each do |subscriber|
            = image_tag subscriber.avatar_url(30)
            - if @error.website.users.size > 10
              = " and #{@error.website.users.size - 10} more"
              - break
          - if @error.website.users.size > 0
            %h5.pull-right
              This message will be sent to
              = @error.website.users.size.to_s + (@error.website.users.size > 1 ? ' users' : ' user')
          .notify
            = form_for @error, url: notify_subscribers_error_path(), remote: true, html: { method: :post , class: ' broadcast-textarea'}, :data => {:confirm => 'Are you sure?'} do |f|
              = text_area_tag 'message', '', placeholder: 'Write a message ...'
              %button.btn.btn-primary{:type => 'submit'} Send