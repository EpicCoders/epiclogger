.panel-body.tabs#php{:style => "display:#{@website.platform == 'Php' ? '' : 'none'};"}
  %div
    %h5{:style => 'display:inline'} Start by installing
    %a{:href => 'https://github.com/EpicCoders/epiclogger-php'}epiclogger-php.
  %h5 Register the autoloader:
  %pre
    %code.language-html
      =preserve do
        :escaped
          require('/path/to/Raven/Autoloader.php');

          Raven_Autoloader::register();
  %h5 Create an instance of the client:
  %pre
    %code.language-html
      $client = new Raven_Client('https://#{@website.app_key}:#{@website.app_key}@test-sentry89.herokuapp.com/#{@website.id}');
  %h5 Now call out to the raven client to capture events:
  %pre
    %code.language-html
      =preserve do
        :escaped
          // record a simple message
          $client->captureMessage('hello world!');

          // capture an exception
          try {
              throw new Exception('Uh oh!');
          }
          catch (Exception $e) {
              $client->captureException($e);
          }
  %h5 You can also optionally install a default error handler to catch all exceptions:
  %pre
    %code.language-html
      =preserve do
        :escaped
          $error_handler = new Raven_ErrorHandler($client);

          // Register error handler callbacks
          set_error_handler(array($error_handler, 'handleError'));
          set_exception_handler(array($error_handler, 'handleException'));
  %hr
  %div
    %h4{:style => 'display:inline'} Note:
    %h5{:style => 'display:inline'} We dont recommend registering the generic error handler as it can be quite noisey.
  %div
    %h5{:style => 'display:inline'}For more information on other uses of Epiclogger with PHP, please see the
    %a{:href => 'https://github.com/EpicCoders/epiclogger-php'}official documentation for epiclogger-php.