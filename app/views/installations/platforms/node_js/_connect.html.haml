.panel-body.tabs#connect{style: @tab == 'connect' ? 'display:block;' : ''}
  %div
    %h5{:style => 'display:inline'} Start by installing
    %a{:href => 'https://github.com/EpicCoders/epiclogger-node'}epiclogger-node.
  %br
  %pre
    %code.language-html
      %p npm install epiclogger
  %h5 Register an instance of the Connect middleware after your main application handler:
  %pre
    %code.language-html
      =preserve do
        :escaped
          connect(
            connect.bodyParser(),
            connect.cookieParser(),
            mainHandler,
            raven.middleware.connect('https://#{@website.app_key}:#{@website.app_secret}@test-sentry89.herokuapp.com/#{@website.id}'),
          ).listen(3000);
  %div
    %h5{:style => 'display:inline'} Ensure Node is run with
    %code NODE_ENV=production:
  %pre
    %code.language-html
      %p NODE_ENV=production node script.js
  %hr
  %h5 That's it! Epiclogger automatically installs an error handling hook to pipe all uncaught exceptions to Epiclogger.
  %div
    %h5{:style => 'display:inline'}For more information on other uses of Epiclogger with Node.js, please see the
    %a{:href => 'https://github.com/EpicCoders/epiclogger-node'}official documentation for epiclogger-node.