.panel-body.tabs#javascript{style: @tab == 'javascript' ? 'display:block;' : ''}
  %div
    %h5{:style => 'display:inline'} Start by installing
    %a{:href => 'https://github.com/EpicCoders/epiclogger-js'}epiclogger-js.
  %br
  %pre
    %code.language-html
      %p &lt;script src="//cdn.epicloggerjs.com/1.1.2/jquery,native/epiclogger.min.js"&gt;&lt;/script&gt;
  %hr
  %h5 Add the any URLs which will be logging errors in your project's settings under Client Security:
  %br
  %img{:src => asset_path("epiclogger-js.png")}
  %hr
  %h5 Configure the client
  %pre
    %code.language-html
      =preserve do
        :escaped
          <script>
            Raven.config('https://#{@website.app_key}@test-sentry89.herokuapp.com/#{@website.id}', {
                # we highly recommend restricting exceptions to a domain in order to filter out clutter
                whitelistUrls: [/example\.com/]
            }).install();
            </script>
  %h5 Add additional user context if it's available:
  %pre
    %code.language-html
      =preserve do
        :escaped
          Raven.setUser({
              email: '<?php echo $_SESSION['email'] ?>',
              id: '<?php echo $_SESSION['id'] ?>'
          });
  %h5 Now call out to the epiclogger client to capture events:
  %pre
    %code.language-html
      =preserve do
        :escaped
          *record a simple message
          Epiclogger.captureMessage('hello world!')

          *capture an exception
          try {
            errorThrowingCode();
          } catch(err) {
            Epiclogger.captureException(err);
          }
  %div
    %h5{:style => 'display:inline'}For more information on other uses of Epiclogger with Javascript, please see the official documentation for
    %a{:href => 'https://github.com/EpicCoders/epiclogger-js'}epiclogger-js.