.col-md-12.pagecontainer.tab#ios_tab
  .pagetitle.text-center
    %h3 Configuring IOS
    = @tab
  .panel.panel-default.codeview
    .panel-heading
    = render partial: 'installations/platforms/ios/ios'

/ .col-md-12.pagecontainer.tab#ios_tab
/   .pagetitle.text-center
/     %h3 Configurating IOS
/   .panel.panel-default
/     .panel-heading
/     .panel-body
/       %div
/         %h5{:style => 'display:inline'} Start by installing
/         %a{:href => 'https://github.com/EpicCoders/epiclogger-objc'}epiclogger-objc.
/       %pre
/         %code.language-html
/           =preserve do
/             :escaped
/               cd [your project root]
/               git submodule add git://github.com/getsentry/epiclogger-objc
/       %h6 (Installing the client as a git submodule will make future updates easier)
/       %div
/         %h5{:style => 'display:inline'} Initialize the client. This is usually done in your app delegate's
/         %code application:didFinishLaunchingWithOptions:
/       %pre
/         %code.language-html
/           =preserve do
/             :escaped
/               - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {
/                 // Configure the Sentry client
/                 [RavenClient clientWithDSN:@"https://#{@website.app_key}:#{@website.app_key}@test-sentry89.herokuapp.com/#{@website.id}"];

/                 // Install the global error handler
/                 [[RavenClient sharedClient] setupExceptionHandler];

/                 return YES;
/             }
/       %hr
/       %h5 That's it! epiclogger automatically installs an error handling hook to pipe all uncaught exceptions to Sentry.
/       %div
/         %h5{:style => 'display:inline'}For more information on other uses of Epiclogger with IOS, please see the
/         %a{:href => 'https://github.com/EpicCoders/epiclogger-objc'}official documentation for epiclogger-objc.