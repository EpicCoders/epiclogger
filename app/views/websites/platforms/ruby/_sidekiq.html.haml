.panel-body.tabs#sidekiq
  %div
    %h5{:style => 'display:inline'} Start by installing
    %a{:href => 'https://github.com/EpicCoders/epiclogger-ruby'}epiclogger-ruby.
  %br
  %pre
    %code.language-html
      %p gem install sentry-epiclogger
  %div
    %h5{:style => 'display:inline'} Or add it to your
    %code Gemfile:
  %pre
    %code.language-html
      %p gem "sentry-epiclogger", :git => "https://github.com/getsentry/epiclogger-ruby.git"
  %h5 Configure the client within your application:
  %pre
    %code.language-html.platform-code
      =preserve do
        :escaped
          require 'raven'

          Raven.configure do |config|
            config.dsn = 'https://#{@website.app_key}:#{@website.app_key}@test-sentry89.herokuapp.com/#{@website.id}'
          end
  %h5 That's it! epiclogger automatically appends middleware to pipe all uncaught exceptions to Sentry.
  %h5 You may want to give things a try, you might want to use the included Rake task to test your configuration:
  %pre
    %code.language-html
      %h5 rake epiclogger:test
  %h5 Note: If you're not bootstrapping the epiclogger gem somewhere that's included in your Rakefile, you'll have to manually pass the DSN value:
  %pre
    %code.language-html
      %h5 rake epiclogger:test[DSN]
  %hr
  %div
    %h5{:style => 'display:inline'}For more information on other uses of Epiclogger with Ruby, please see the
    %a{:href => 'https://github.com/EpicCoders/epiclogger-ruby'}official documentation for epiclogger-ruby.