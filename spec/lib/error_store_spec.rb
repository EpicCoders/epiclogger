require 'rails_helper'

RSpec.describe ErrorStore do
  let(:member) { create :member }
  let(:website) { create :website }
  let!(:website_member) { create :website_member, website: website, member: member }
  let(:group) { create :grouped_issue, website: website }
  let(:subscriber) { create :subscriber, website: website }
  let!(:issue_error) { create :issue, subscriber: subscriber, group: group }
  let(:message) { 'asdada' }
  let(:default_params) { { website_id: website.id, format: :json } }
  let(:request) { post_error_request('api_key', 'api_secret', "{\"event_id\":\"d29933caa7c073bcd3593bd7bb20b63c\",\"message\":\"ZeroDivisionError: divided by 0\",\"timestamp\":\"2016-02-16T10:09:27\",\"time_spent\":2,\"level\":40,\"project\":null,\"platform\":\"ruby\",\"logger\":\"\",\"culprit\":\"app/controllers/home_controller.rb in / at line 5\",\"server_name\":\"imac.local\",\"modules\":{\"rake\":\"10.4.2\"},\"extra\":{},\"tags\":{},\"user\":{},\"exception\":{\"values\":[{\"type\":\"ZeroDivisionError\",\"value\":\"divided by 0\",\"module\":\"\",\"stacktrace\":{\"frames\":[{\"pre_context\":[\"            raise\\n\",\"          end\\n\",\"          call_callback(:AcceptCallback, sock)\\n\"],\"post_context\":[\"        rescue Errno::ENOTCONN\\n\",\"          @logger.debug \\\"Errno::ENOTCONN raised\\\"\\n\",\"        rescue ServerError => ex\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/rubies/ruby-2.2.1/lib/ruby/2.2.0/webrick/server.rb\",\"function\":\"block in start_thread\",\"lineno\":294,\"in_app\":false,\"context_line\":\"          block ? block.call(sock) : run(sock)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"webrick/server.rb\"},{\"pre_context\":[\"            @logger.warn(msg)\\n\",\"            callback.call(req, res)\\n\",\"          end\\n\"],\"post_context\":[\"        rescue HTTPStatus::EOFError, HTTPStatus::RequestTimeout => ex\\n\",\"          res.set_error(ex)\\n\",\"        rescue HTTPStatus::Error => ex\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/rubies/ruby-2.2.1/lib/ruby/2.2.0/webrick/httpserver.rb\",\"function\":\"run\",\"lineno\":94,\"in_app\":false,\"context_line\":\"          server.service(req, res)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"webrick/httpserver.rb\"},{\"pre_context\":[\"      req.path_info = path_info\\n\",\"      si = servlet.get_instance(self, *options)\\n\",\"      @logger.debug(format(\\\"%s is invoked.\\\", si.class.name))\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    ##\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/rubies/ruby-2.2.1/lib/ruby/2.2.0/webrick/httpserver.rb\",\"function\":\"service\",\"lineno\":138,\"in_app\":false,\"context_line\":\"      si.service(req, res)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"webrick/httpserver.rb\"},{\"pre_context\":[\"        end\\n\",\"        env[\\\"REQUEST_PATH\\\"] ||= [env[\\\"SCRIPT_NAME\\\"], env[PATH_INFO]].join\\n\",\"\\n\"],\"post_context\":[\"        begin\\n\",\"          res.status = status.to_i\\n\",\"          headers.each { |k, vs|\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/handler/webrick.rb\",\"function\":\"service\",\"lineno\":88,\"in_app\":false,\"context_line\":\"        status, headers, body = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/handler/webrick.rb\"},{\"pre_context\":[\"    end\\n\",\"\\n\",\"    def call(env)\\n\"],\"post_context\":[\"      headers = HeaderHash.new(headers)\\n\",\"\\n\",\"      if !STATUS_WITH_NO_ENTITY_BODY.include?(status.to_i) &&\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/content_length.rb\",\"function\":\"call\",\"lineno\":15,\"in_app\":false,\"context_line\":\"      status, headers, body = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/content_length.rb\"},{\"pre_context\":[\"    def call(env)\\n\",\"      old, env[FLAG] = env[FLAG], false\\n\",\"      @mutex.lock\\n\"],\"post_context\":[\"      body = BodyProxy.new(response[2]) { @mutex.unlock }\\n\",\"      response[2] = body\\n\",\"      response\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/lock.rb\",\"function\":\"call\",\"lineno\":17,\"in_app\":false,\"context_line\":\"      response = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/lock.rb\"},{\"pre_context\":[\"    def call(env)\\n\",\"      env[\\\"ORIGINAL_FULLPATH\\\"] = build_original_fullpath(env)\\n\",\"      env[\\\"ORIGINAL_SCRIPT_NAME\\\"] = env[\\\"SCRIPT_NAME\\\"]\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    # Reload application routes regardless if they changed or not.\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/railties-4.2.1/lib/rails/application.rb\",\"function\":\"call\",\"lineno\":164,\"in_app\":false,\"context_line\":\"      super(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rails/application.rb\"},{\"pre_context\":[\"      if env['SCRIPT_NAME']\\n\",\"        env[\\\"ROUTES_\#{routes.object_id}_SCRIPT_NAME\\\"] = env['SCRIPT_NAME'].dup\\n\",\"      end\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    # Defines additional Rack env configuration that is added on each call.\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/railties-4.2.1/lib/rails/engine.rb\",\"function\":\"call\",\"lineno\":518,\"in_app\":false,\"context_line\":\"      app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rails/engine.rb\"},{\"pre_context\":[\"      Raven.rack_context(env)\\n\",\"\\n\",\"      begin\\n\"],\"post_context\":[\"      rescue Error\\n\",\"        raise # Don't capture Raven errors\\n\",\"      rescue Exception => e\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/sentry-raven-0.15.2/lib/raven/integrations/rack.rb\",\"function\":\"call\",\"lineno\":54,\"in_app\":false,\"context_line\":\"        response = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"raven/integrations/rack.rb\"},{\"pre_context\":[\"    end\\n\",\"\\n\",\"    def call(env)\\n\"],\"post_context\":[\"      if body.respond_to?(:to_path)\\n\",\"        case type = variation(env)\\n\",\"        when 'X-Accel-Redirect'\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/sendfile.rb\",\"function\":\"call\",\"lineno\":113,\"in_app\":false,\"context_line\":\"      status, headers, body = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/sendfile.rb\"},{\"pre_context\":[\"        end\\n\",\"      end\\n\",\"\\n\"],\"post_context\":[\"    end\\n\",\"  end\\n\",\"end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/middleware/static.rb\",\"function\":\"call\",\"lineno\":113,\"in_app\":false,\"context_line\":\"      @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/middleware/static.rb\"},{\"pre_context\":[\"    def call(env)\\n\",\"      old, env[FLAG] = env[FLAG], false\\n\",\"      @mutex.lock\\n\"],\"post_context\":[\"      body = BodyProxy.new(response[2]) { @mutex.unlock }\\n\",\"      response[2] = body\\n\",\"      response\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/lock.rb\",\"function\":\"call\",\"lineno\":17,\"in_app\":false,\"context_line\":\"      response = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/lock.rb\"},{\"pre_context\":[\"\\n\",\"          def call(env)\\n\",\"            LocalCacheRegistry.set_cache_for(local_cache_key, LocalStore.new)\\n\"],\"post_context\":[\"            response[2] = ::Rack::BodyProxy.new(response[2]) do\\n\",\"              LocalCacheRegistry.set_cache_for(local_cache_key, nil)\\n\",\"            end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/cache/strategy/local_cache_middleware.rb\",\"function\":\"call\",\"lineno\":28,\"in_app\":false,\"context_line\":\"            response = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/cache/strategy/local_cache_middleware.rb\"},{\"pre_context\":[\"    FORMAT_STRING = \\\"%0.6f\\\"\\n\",\"    def call(env)\\n\",\"      start_time = clock_time\\n\"],\"post_context\":[\"      request_time = clock_time - start_time\\n\",\"\\n\",\"      if !headers.has_key?(@header_name)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/runtime.rb\",\"function\":\"call\",\"lineno\":18,\"in_app\":false,\"context_line\":\"      status, headers, body = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/runtime.rb\"},{\"pre_context\":[\"        end\\n\",\"      end\\n\",\"\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    def method_override(env)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/methodoverride.rb\",\"function\":\"call\",\"lineno\":22,\"in_app\":false,\"context_line\":\"      @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/methodoverride.rb\"},{\"pre_context\":[\"\\n\",\"    def call(env)\\n\",\"      env[\\\"action_dispatch.request_id\\\"] = external_request_id(env) || internal_request_id\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    private\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/middleware/request_id.rb\",\"function\":\"call\",\"lineno\":21,\"in_app\":false,\"context_line\":\"      @app.call(env).tap { |_status, headers, _body| headers[\\\"X-Request-Id\\\"] = env[\\\"action_dispatch.request_id\\\"] }\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/middleware/request_id.rb\"},{\"pre_context\":[\"        request = ActionDispatch::Request.new(env)\\n\",\"\\n\",\"        if logger.respond_to?(:tagged)\\n\"],\"post_context\":[\"        else\\n\",\"          call_app(request, env)\\n\",\"        end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/railties-4.2.1/lib/rails/rack/logger.rb\",\"function\":\"call\",\"lineno\":20,\"in_app\":false,\"context_line\":\"          logger.tagged(compute_tags(request)) { call_app(request, env) }\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rails/rack/logger.rb\"},{\"pre_context\":[\"    delegate :push_tags, :pop_tags, :clear_tags!, to: :formatter\\n\",\"\\n\",\"    def tagged(*tags)\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    def flush\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/tagged_logging.rb\",\"function\":\"tagged\",\"lineno\":68,\"in_app\":false,\"context_line\":\"      formatter.tagged(*tags) { yield self }\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/tagged_logging.rb\"},{\"pre_context\":[\"\\n\",\"      def tagged(*tags)\\n\",\"        new_tags = push_tags(*tags)\\n\"],\"post_context\":[\"      ensure\\n\",\"        pop_tags(new_tags.size)\\n\",\"      end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/tagged_logging.rb\",\"function\":\"tagged\",\"lineno\":26,\"in_app\":false,\"context_line\":\"        yield self\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/tagged_logging.rb\"},{\"pre_context\":[\"    delegate :push_tags, :pop_tags, :clear_tags!, to: :formatter\\n\",\"\\n\",\"    def tagged(*tags)\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    def flush\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/tagged_logging.rb\",\"function\":\"block in tagged\",\"lineno\":68,\"in_app\":false,\"context_line\":\"      formatter.tagged(*tags) { yield self }\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/tagged_logging.rb\"},{\"pre_context\":[\"        request = ActionDispatch::Request.new(env)\\n\",\"\\n\",\"        if logger.respond_to?(:tagged)\\n\"],\"post_context\":[\"        else\\n\",\"          call_app(request, env)\\n\",\"        end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/railties-4.2.1/lib/rails/rack/logger.rb\",\"function\":\"block in call\",\"lineno\":20,\"in_app\":false,\"context_line\":\"          logger.tagged(compute_tags(request)) { call_app(request, env) }\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rails/rack/logger.rb\"},{\"pre_context\":[\"        instrumenter = ActiveSupport::Notifications.instrumenter\\n\",\"        instrumenter.start 'request.action_dispatch', request: request\\n\",\"        logger.info { started_request_message(request) }\\n\"],\"post_context\":[\"        resp[2] = ::Rack::BodyProxy.new(resp[2]) { finish(request) }\\n\",\"        resp\\n\",\"      rescue Exception\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/railties-4.2.1/lib/rails/rack/logger.rb\",\"function\":\"call_app\",\"lineno\":38,\"in_app\":false,\"context_line\":\"        resp = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rails/rack/logger.rb\"},{\"pre_context\":[\"    end\\n\",\"\\n\",\"    def call(env)\\n\"],\"post_context\":[\"    rescue Exception => exception\\n\",\"      if env['action_dispatch.show_exceptions'] == false\\n\",\"        raise exception\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/middleware/show_exceptions.rb\",\"function\":\"call\",\"lineno\":30,\"in_app\":false,\"context_line\":\"      @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/middleware/show_exceptions.rb\"},{\"pre_context\":[\"        return change_stack_trace(id, request)\\n\",\"      end\\n\",\"\\n\"],\"post_context\":[\"\\n\",\"      if exception = env['web_console.exception']\\n\",\"        session = Session.from_exception(exception)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/web-console-2.2.1/lib/web_console/middleware.rb\",\"function\":\"call\",\"lineno\":39,\"in_app\":false,\"context_line\":\"      status, headers, body = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"web_console/middleware.rb\"},{\"pre_context\":[\"    end\\n\",\"\\n\",\"    def call(env)\\n\"],\"post_context\":[\"\\n\",\"      if headers['X-Cascade'] == 'pass'\\n\",\"        body.close if body.respond_to?(:close)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/middleware/debug_exceptions.rb\",\"function\":\"call\",\"lineno\":17,\"in_app\":false,\"context_line\":\"      _, headers, body = response = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/middleware/debug_exceptions.rb\"},{\"pre_context\":[\"    # GetIp#calculate_ip method will calculate the memoized client IP address.\\n\",\"    def call(env)\\n\",\"      env[\\\"action_dispatch.remote_ip\\\"] = GetIp.new(env, self)\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    # The GetIp class exists as a way to defer processing of the request data\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/middleware/remote_ip.rb\",\"function\":\"call\",\"lineno\":78,\"in_app\":false,\"context_line\":\"      @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/middleware/remote_ip.rb\"},{\"pre_context\":[\"      @validated = @condition.call\\n\",\"      prepare!\\n\",\"\\n\"],\"post_context\":[\"      response[2] = ::Rack::BodyProxy.new(response[2]) { cleanup! }\\n\",\"\\n\",\"      response\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/middleware/reloader.rb\",\"function\":\"call\",\"lineno\":73,\"in_app\":false,\"context_line\":\"      response = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/middleware/reloader.rb\"},{\"pre_context\":[\"\\n\",\"    def call(env)\\n\",\"      error = nil\\n\"],\"post_context\":[\"        begin\\n\",\"          @app.call(env)\\n\",\"        rescue => error\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/middleware/callbacks.rb\",\"function\":\"call\",\"lineno\":27,\"in_app\":false,\"context_line\":\"      result = run_callbacks :call do\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/middleware/callbacks.rb\"},{\"pre_context\":[\"    #     save\\n\",\"    #   end\\n\",\"    def run_callbacks(kind, &block)\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    private\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"run_callbacks\",\"lineno\":81,\"in_app\":false,\"context_line\":\"      send \\\"_run_\#{kind}_callbacks\\\", &block\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"\\n\",\"          module_eval <<-RUBY, __FILE__, __LINE__ + 1\\n\",\"            def _run_\#{name}_callbacks(&block)\\n\"],\"post_context\":[\"            end\\n\",\"          RUBY\\n\",\"        end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"_run_call_callbacks\",\"lineno\":776,\"in_app\":false,\"context_line\":\"              _run_callbacks(_\#{name}_callbacks, &block)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"\\n\",\"    def _run_callbacks(callbacks, &block)\\n\",\"      if callbacks.empty?\\n\"],\"post_context\":[\"      else\\n\",\"        runner = callbacks.compile\\n\",\"        e = Filters::Environment.new(self, false, nil, block)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"_run_callbacks\",\"lineno\":88,\"in_app\":false,\"context_line\":\"        block.call if block\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"\\n\",\"    def _run_callbacks(callbacks, &block)\\n\",\"      if callbacks.empty?\\n\"],\"post_context\":[\"      else\\n\",\"        runner = callbacks.compile\\n\",\"        e = Filters::Environment.new(self, false, nil, block)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"call\",\"lineno\":88,\"in_app\":false,\"context_line\":\"        block.call if block\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"      error = nil\\n\",\"      result = run_callbacks :call do\\n\",\"        begin\\n\"],\"post_context\":[\"        rescue => error\\n\",\"        end\\n\",\"      end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/middleware/callbacks.rb\",\"function\":\"block in call\",\"lineno\":29,\"in_app\":false,\"context_line\":\"          @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/middleware/callbacks.rb\"},{\"pre_context\":[\"            @last_check = mtime\\n\",\"          end\\n\",\"        end\\n\"],\"post_context\":[\"      end\\n\",\"\\n\",\"      private\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activerecord-4.2.1/lib/active_record/migration.rb\",\"function\":\"call\",\"lineno\":378,\"in_app\":false,\"context_line\":\"        @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_record/migration.rb\"},{\"pre_context\":[\"      def call(env)\\n\",\"        testing = env['rack.test']\\n\",\"\\n\"],\"post_context\":[\"        response[2] = ::Rack::BodyProxy.new(response[2]) do\\n\",\"          ActiveRecord::Base.clear_active_connections! unless testing\\n\",\"        end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activerecord-4.2.1/lib/active_record/connection_adapters/abstract/connection_pool.rb\",\"function\":\"call\",\"lineno\":649,\"in_app\":false,\"context_line\":\"        response = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_record/connection_adapters/abstract/connection_pool.rb\"},{\"pre_context\":[\"      connection_id = ActiveRecord::Base.connection_id\\n\",\"      connection.enable_query_cache!\\n\",\"\\n\"],\"post_context\":[\"      response[2] = Rack::BodyProxy.new(response[2]) do\\n\",\"        restore_query_cache_settings(connection_id, enabled)\\n\",\"      end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activerecord-4.2.1/lib/active_record/query_cache.rb\",\"function\":\"call\",\"lineno\":36,\"in_app\":false,\"context_line\":\"      response = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_record/query_cache.rb\"},{\"pre_context\":[\"    end\\n\",\"\\n\",\"    def call(env)\\n\"],\"post_context\":[\"\\n\",\"      if cookie_jar = env['action_dispatch.cookies']\\n\",\"        unless cookie_jar.committed?\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/middleware/cookies.rb\",\"function\":\"call\",\"lineno\":560,\"in_app\":false,\"context_line\":\"      status, headers, body = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/middleware/cookies.rb\"},{\"pre_context\":[\"        end\\n\",\"\\n\",\"        def call(env)\\n\"],\"post_context\":[\"        end\\n\",\"\\n\",\"        def context(env, app=@app)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/session/abstract/id.rb\",\"function\":\"call\",\"lineno\":220,\"in_app\":false,\"context_line\":\"          context(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/session/abstract/id.rb\"},{\"pre_context\":[\"\\n\",\"        def context(env, app=@app)\\n\",\"          prepare_session(env)\\n\"],\"post_context\":[\"          commit_session(env, status, headers, body)\\n\",\"        end\\n\",\"\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/session/abstract/id.rb\",\"function\":\"context\",\"lineno\":225,\"in_app\":false,\"context_line\":\"          status, headers, body = app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/session/abstract/id.rb\"},{\"pre_context\":[\"    end\\n\",\"\\n\",\"    def call(env)\\n\"],\"post_context\":[\"    ensure\\n\",\"      session    = Request::Session.find(env) || {}\\n\",\"      flash_hash = env[KEY]\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/middleware/flash.rb\",\"function\":\"call\",\"lineno\":260,\"in_app\":false,\"context_line\":\"      @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/middleware/flash.rb\"},{\"pre_context\":[\"        env[\\\"action_dispatch.request.request_parameters\\\"] = params\\n\",\"      end\\n\",\"\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    private\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/middleware/params_parser.rb\",\"function\":\"call\",\"lineno\":27,\"in_app\":false,\"context_line\":\"      @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/middleware/params_parser.rb\"},{\"pre_context\":[\"  end\\n\",\"\\n\",\"  def call(env)\\n\"],\"post_context\":[\"\\n\",\"    if env[REQUEST_METHOD] == HEAD\\n\",\"      [\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/head.rb\",\"function\":\"call\",\"lineno\":13,\"in_app\":false,\"context_line\":\"    status, headers, body = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/head.rb\"},{\"pre_context\":[\"    def call(env)\\n\",\"      case env[REQUEST_METHOD]\\n\",\"      when \\\"GET\\\", \\\"HEAD\\\"\\n\"],\"post_context\":[\"        headers = Utils::HeaderHash.new(headers)\\n\",\"        if status == 200 && fresh?(env, headers)\\n\",\"          status = 304\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/conditionalget.rb\",\"function\":\"call\",\"lineno\":25,\"in_app\":false,\"context_line\":\"        status, headers, body = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/conditionalget.rb\"},{\"pre_context\":[\"    end\\n\",\"\\n\",\"    def call(env)\\n\"],\"post_context\":[\"\\n\",\"      if etag_status?(status) && etag_body?(body) && !skip_caching?(headers)\\n\",\"        original_body = body\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/rack-1.6.4/lib/rack/etag.rb\",\"function\":\"call\",\"lineno\":24,\"in_app\":false,\"context_line\":\"      status, headers, body = @app.call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"rack/etag.rb\"},{\"pre_context\":[\"      def call(env)\\n\",\"        req = request_class.new(env)\\n\",\"        req.path_info = Journey::Router::Utils.normalize_path(req.path_info)\\n\"],\"post_context\":[\"      end\\n\",\"\\n\",\"      def recognize_path(path, environment = {})\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/routing/route_set.rb\",\"function\":\"call\",\"lineno\":819,\"in_app\":false,\"context_line\":\"        @router.serve(req)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/routing/route_set.rb\"},{\"pre_context\":[\"      end\\n\",\"\\n\",\"      def serve(req)\\n\"],\"post_context\":[\"          set_params  = req.path_parameters\\n\",\"          path_info   = req.path_info\\n\",\"          script_name = req.script_name\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/journey/router.rb\",\"function\":\"serve\",\"lineno\":30,\"in_app\":false,\"context_line\":\"        find_routes(req).each do |match, parameters, route|\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/journey/router.rb\"},{\"pre_context\":[\"      end\\n\",\"\\n\",\"      def serve(req)\\n\"],\"post_context\":[\"          set_params  = req.path_parameters\\n\",\"          path_info   = req.path_info\\n\",\"          script_name = req.script_name\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/journey/router.rb\",\"function\":\"each\",\"lineno\":30,\"in_app\":false,\"context_line\":\"        find_routes(req).each do |match, parameters, route|\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/journey/router.rb\"},{\"pre_context\":[\"\\n\",\"          req.path_parameters = set_params.merge parameters\\n\",\"\\n\"],\"post_context\":[\"\\n\",\"          if 'pass' == headers['X-Cascade']\\n\",\"            req.script_name     = script_name\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/journey/router.rb\",\"function\":\"block in serve\",\"lineno\":43,\"in_app\":false,\"context_line\":\"          status, headers, body = route.app.serve(req)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/journey/router.rb\"},{\"pre_context\":[\"            return [404, {'X-Cascade' => 'pass'}, []]\\n\",\"          end\\n\",\"\\n\"],\"post_context\":[\"        end\\n\",\"\\n\",\"        def prepare_params!(params)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/routing/route_set.rb\",\"function\":\"serve\",\"lineno\":43,\"in_app\":false,\"context_line\":\"          dispatch(controller, params[:action], req.env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/routing/route_set.rb\"},{\"pre_context\":[\"        end\\n\",\"\\n\",\"        def dispatch(controller, action, env)\\n\"],\"post_context\":[\"        end\\n\",\"\\n\",\"        def normalize_controller!(params)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/routing/route_set.rb\",\"function\":\"dispatch\",\"lineno\":74,\"in_app\":false,\"context_line\":\"          controller.action(action).call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/routing/route_set.rb\"},{\"pre_context\":[\"        end\\n\",\"\\n\",\"        def dispatch(controller, action, env)\\n\"],\"post_context\":[\"        end\\n\",\"\\n\",\"        def normalize_controller!(params)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_dispatch/routing/route_set.rb\",\"function\":\"call\",\"lineno\":74,\"in_app\":false,\"context_line\":\"          controller.action(action).call(env)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_dispatch/routing/route_set.rb\"},{\"pre_context\":[\"          new.dispatch(name, klass.new(env))\\n\",\"        end\\n\",\"      else\\n\"],\"post_context\":[\"      end\\n\",\"    end\\n\",\"  end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_controller/metal.rb\",\"function\":\"block in action\",\"lineno\":237,\"in_app\":false,\"context_line\":\"        lambda { |env| new.dispatch(name, klass.new(env)) }\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_controller/metal.rb\"},{\"pre_context\":[\"\\n\",\"    def dispatch(action, request)\\n\",\"      set_response!(request)\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    def response_body=(body)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_controller/metal/rack_delegation.rb\",\"function\":\"dispatch\",\"lineno\":13,\"in_app\":false,\"context_line\":\"      super(action, request)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_controller/metal/rack_delegation.rb\"},{\"pre_context\":[\"      @_request = request\\n\",\"      @_env = request.env\\n\",\"      @_env['action_controller.instance'] = self\\n\"],\"post_context\":[\"      to_a\\n\",\"    end\\n\",\"\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_controller/metal.rb\",\"function\":\"dispatch\",\"lineno\":196,\"in_app\":false,\"context_line\":\"      process(name)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_controller/metal.rb\"},{\"pre_context\":[\"    # Overwrite process to setup I18n proxy.\\n\",\"    def process(*) #:nodoc:\\n\",\"      old_config, I18n.config = I18n.config, I18nProxy.new(I18n.config, lookup_context)\\n\"],\"post_context\":[\"    ensure\\n\",\"      I18n.config = old_config\\n\",\"    end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionview-4.2.1/lib/action_view/rendering.rb\",\"function\":\"process\",\"lineno\":30,\"in_app\":false,\"context_line\":\"      super\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_view/rendering.rb\"},{\"pre_context\":[\"\\n\",\"      @_response_body = nil\\n\",\"\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    # Delegates to the class' #controller_path\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/abstract_controller/base.rb\",\"function\":\"process\",\"lineno\":137,\"in_app\":false,\"context_line\":\"      process_action(action_name, *args)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"abstract_controller/base.rb\"},{\"pre_context\":[\"        # because of queries in middleware or in cases we are streaming\\n\",\"        # and it won't be cleaned up by the method below.\\n\",\"        ActiveRecord::LogSubscriber.reset_runtime\\n\"],\"post_context\":[\"      end\\n\",\"\\n\",\"      def cleanup_view_runtime\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activerecord-4.2.1/lib/active_record/railties/controller_runtime.rb\",\"function\":\"process_action\",\"lineno\":18,\"in_app\":false,\"context_line\":\"        super\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_record/railties/controller_runtime.rb\"},{\"pre_context\":[\"        # This will display the wrapped hash in the log file\\n\",\"        request.filtered_parameters.merge! wrapped_filtered_hash\\n\",\"      end\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    private\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_controller/metal/params_wrapper.rb\",\"function\":\"process_action\",\"lineno\":250,\"in_app\":false,\"context_line\":\"      super\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_controller/metal/params_wrapper.rb\"},{\"pre_context\":[\"\\n\",\"      ActiveSupport::Notifications.instrument(\\\"start_processing.action_controller\\\", raw_payload.dup)\\n\",\"\\n\"],\"post_context\":[\"        begin\\n\",\"          result = super\\n\",\"          payload[:status] = response.status\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_controller/metal/instrumentation.rb\",\"function\":\"process_action\",\"lineno\":30,\"in_app\":false,\"context_line\":\"      ActiveSupport::Notifications.instrument(\\\"process_action.action_controller\\\", raw_payload) do |payload|\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_controller/metal/instrumentation.rb\"},{\"pre_context\":[\"\\n\",\"      def instrument(name, payload = {})\\n\",\"        if notifier.listening?(name)\\n\"],\"post_context\":[\"        else\\n\",\"          yield payload if block_given?\\n\",\"        end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/notifications.rb\",\"function\":\"instrument\",\"lineno\":164,\"in_app\":false,\"context_line\":\"          instrumenter.instrument(name, payload) { yield payload if block_given? }\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/notifications.rb\"},{\"pre_context\":[\"      def instrument(name, payload={})\\n\",\"        start name, payload\\n\",\"        begin\\n\"],\"post_context\":[\"        rescue Exception => e\\n\",\"          payload[:exception] = [e.class.name, e.message]\\n\",\"          raise e\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/notifications/instrumenter.rb\",\"function\":\"instrument\",\"lineno\":20,\"in_app\":false,\"context_line\":\"          yield payload\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/notifications/instrumenter.rb\"},{\"pre_context\":[\"\\n\",\"      def instrument(name, payload = {})\\n\",\"        if notifier.listening?(name)\\n\"],\"post_context\":[\"        else\\n\",\"          yield payload if block_given?\\n\",\"        end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/notifications.rb\",\"function\":\"block in instrument\",\"lineno\":164,\"in_app\":false,\"context_line\":\"          instrumenter.instrument(name, payload) { yield payload if block_given? }\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/notifications.rb\"},{\"pre_context\":[\"\\n\",\"      ActiveSupport::Notifications.instrument(\\\"process_action.action_controller\\\", raw_payload) do |payload|\\n\",\"        begin\\n\"],\"post_context\":[\"          payload[:status] = response.status\\n\",\"          result\\n\",\"        ensure\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_controller/metal/instrumentation.rb\",\"function\":\"block in process_action\",\"lineno\":32,\"in_app\":false,\"context_line\":\"          result = super\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_controller/metal/instrumentation.rb\"},{\"pre_context\":[\"\\n\",\"    private\\n\",\"      def process_action(*args)\\n\"],\"post_context\":[\"      rescue Exception => exception\\n\",\"        request.env['action_dispatch.show_detailed_exceptions'] ||= show_detailed_exceptions?\\n\",\"        rescue_with_handler(exception) || raise(exception)\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_controller/metal/rescue.rb\",\"function\":\"process_action\",\"lineno\":29,\"in_app\":false,\"context_line\":\"        super\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_controller/metal/rescue.rb\"},{\"pre_context\":[\"    # Override AbstractController::Base's process_action to run the\\n\",\"    # process_action callbacks around the normal behavior.\\n\",\"    def process_action(*args)\\n\"],\"post_context\":[\"        super\\n\",\"      end\\n\",\"    end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/abstract_controller/callbacks.rb\",\"function\":\"process_action\",\"lineno\":19,\"in_app\":false,\"context_line\":\"      run_callbacks(:process_action) do\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"abstract_controller/callbacks.rb\"},{\"pre_context\":[\"    #     save\\n\",\"    #   end\\n\",\"    def run_callbacks(kind, &block)\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    private\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"run_callbacks\",\"lineno\":81,\"in_app\":false,\"context_line\":\"      send \\\"_run_\#{kind}_callbacks\\\", &block\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"\\n\",\"          module_eval <<-RUBY, __FILE__, __LINE__ + 1\\n\",\"            def _run_\#{name}_callbacks(&block)\\n\"],\"post_context\":[\"            end\\n\",\"          RUBY\\n\",\"        end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"_run_process_action_callbacks\",\"lineno\":776,\"in_app\":false,\"context_line\":\"              _run_callbacks(_\#{name}_callbacks, &block)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"      else\\n\",\"        runner = callbacks.compile\\n\",\"        e = Filters::Environment.new(self, false, nil, block)\\n\"],\"post_context\":[\"      end\\n\",\"    end\\n\",\"\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"_run_callbacks\",\"lineno\":92,\"in_app\":false,\"context_line\":\"        runner.call(e).value\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"\\n\",\"      def call(*args)\\n\",\"        @before.each { |b| b.call(*args) }\\n\"],\"post_context\":[\"        @after.each { |a| a.call(*args) }\\n\",\"        value\\n\",\"      end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"call\",\"lineno\":505,\"in_app\":false,\"context_line\":\"        value = @call.call(*args)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"\\n\",\"      def call(*args)\\n\",\"        @before.each { |b| b.call(*args) }\\n\"],\"post_context\":[\"        @after.each { |a| a.call(*args) }\\n\",\"        value\\n\",\"      end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"call\",\"lineno\":505,\"in_app\":false,\"context_line\":\"        value = @call.call(*args)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"\\n\",\"      def compile\\n\",\"        @callbacks || @mutex.synchronize do\\n\"],\"post_context\":[\"          @callbacks ||= @chain.reverse.inject(final_sequence) do |callback_sequence, callback|\\n\",\"            callback.apply callback_sequence\\n\",\"          end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"block (2 levels) in compile\",\"lineno\":555,\"in_app\":false,\"context_line\":\"          final_sequence = CallbackSequence.new { |env| Filters::ENDING.call(env) }\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"      class End\\n\",\"        def call(env)\\n\",\"          block = env.run_block\\n\"],\"post_context\":[\"          env\\n\",\"        end\\n\",\"      end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"call\",\"lineno\":117,\"in_app\":false,\"context_line\":\"          env.value = !env.halted && (!block || block.call)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"      class End\\n\",\"        def call(env)\\n\",\"          block = env.run_block\\n\"],\"post_context\":[\"          env\\n\",\"        end\\n\",\"      end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/activesupport-4.2.1/lib/active_support/callbacks.rb\",\"function\":\"call\",\"lineno\":117,\"in_app\":false,\"context_line\":\"          env.value = !env.halted && (!block || block.call)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"active_support/callbacks.rb\"},{\"pre_context\":[\"    # process_action callbacks around the normal behavior.\\n\",\"    def process_action(*args)\\n\",\"      run_callbacks(:process_action) do\\n\"],\"post_context\":[\"      end\\n\",\"    end\\n\",\"\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/abstract_controller/callbacks.rb\",\"function\":\"block in process_action\",\"lineno\":20,\"in_app\":false,\"context_line\":\"        super\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"abstract_controller/callbacks.rb\"},{\"pre_context\":[\"    # Before processing, set the request formats in current controller formats.\\n\",\"    def process_action(*) #:nodoc:\\n\",\"      self.formats = request.formats.map(&:ref).compact\\n\"],\"post_context\":[\"    end\\n\",\"\\n\",\"    # Check for double render errors and set the content_type after rendering.\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_controller/metal/rendering.rb\",\"function\":\"process_action\",\"lineno\":10,\"in_app\":false,\"context_line\":\"      super\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_controller/metal/rendering.rb\"},{\"pre_context\":[\"      # Notice that the first argument is the method to be dispatched\\n\",\"      # which is *not* necessarily the same as the action name.\\n\",\"      def process_action(method_name, *args)\\n\"],\"post_context\":[\"      end\\n\",\"\\n\",\"      # Actually call the method associated with the action. Override\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/abstract_controller/base.rb\",\"function\":\"process_action\",\"lineno\":198,\"in_app\":false,\"context_line\":\"        send_action(method_name, *args)\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"abstract_controller/base.rb\"},{\"pre_context\":[\"module ActionController\\n\",\"  module ImplicitRender\\n\",\"    def send_action(method, *args)\\n\"],\"post_context\":[\"      default_render unless performed?\\n\",\"      ret\\n\",\"    end\\n\"],\"abs_path\":\"/Users/razvanciocanel/.rvm/gems/ruby-2.2.1/gems/actionpack-4.2.1/lib/action_controller/metal/implicit_render.rb\",\"function\":\"send_action\",\"lineno\":4,\"in_app\":false,\"context_line\":\"      ret = super\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"action_controller/metal/implicit_render.rb\"},{\"pre_context\":[\"  # Prevent CSRF attacks by raising an exception.\\n\",\"  # For APIs, you may want to use :null_session instead.\\n\",\"  def index\\n\"],\"post_context\":[\"  end\\n\",\"end\\n\",null],\"abs_path\":\"/Users/razvanciocanel/Development/ravenapp/app/controllers/home_controller.rb\",\"function\":\"index\",\"lineno\":5,\"in_app\":true,\"context_line\":\"    1/0\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"app/controllers/home_controller.rb\"},{\"pre_context\":[\"  # Prevent CSRF attacks by raising an exception.\\n\",\"  # For APIs, you may want to use :null_session instead.\\n\",\"  def index\\n\"],\"post_context\":[\"  end\\n\",\"end\\n\",null],\"abs_path\":\"/Users/razvanciocanel/Development/ravenapp/app/controllers/home_controller.rb\",\"function\":\"/\",\"lineno\":5,\"in_app\":true,\"context_line\":\"    1/0\\n\",\"project_root\":\"/Users/razvanciocanel/Development/ravenapp\",\"filename\":\"app/controllers/home_controller.rb\"}]}}]},\"request\":{\"headers\":{\"Host\":\"localhost:3001\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"max-age=0\",\"Accept\":\"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\"Upgrade-Insecure-Requests\":\"1\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.109 Safari/537.36\",\"Accept-Encoding\":\"gzip, deflate, sdch\",\"Accept-Language\":\"en-US,en;q=0.8,es;q=0.6,ro;q=0.4\",\"Cookie\":\"intercom-visitor-semaphore-wqayrig5=1; auth_token=VXxa-HmSk2eBW8VM3WJM_qPcxk62bUz8tbsB3U_8MAs; notifications=hide; ahoy_visitor=e4e9e4f6-66c7-4a94-8939-d12241dcf659; ajs_anonymous_id=%2244a3d907-06e0-4b72-933d-ce25dbf38ec1%22; _pxls_session=VVUzMTVHY2ZyQ3hURmFwUnViU0g3UkRVV09VU3lXRDU0MXJuVGxYazhndjdQMS9RSkZRaVJnSVVsYUhIVUc2b3gwN1o2K2tQeVMyUTdxaXRmcFFwbk0wMmVLSUl0bXRTRDBwWDRzWm5maEIxTkdwUHlFcU1hSlJUaVUxcmNvVnNlZytueExnc2RoY1phazZob1poRTRUTXFiL056eHNQUnJSY1FuV3RBd1IwPS0tamxYMG5KbXdiRmNYR2VBY3VDNTNHdz09--d1c977197c7ba1a7de8b2a148ba799a380fa7dfd; _hubstaff-directory_session=NXNzSm41S1Mwb3IyYkttWk1pM2w3VWgybnp2YzUxaFc4QndKNGxaT3dxbDBWdGNPWlNhVDR5SCtCKzBPdU5WVWdPNFVyTENsWVBobG9WaWJRa0dNUjZPczVOeGVoYWtWKzVJZ0VtS0VUT1lRQXNxMkxJY0owcVA4UU1KakxCd3pSKzZURTRBd3M5R0l1cFFKTlVkcTI3VXNSOGZmWUc1d21oNnVwOWs5MzJwL29keFdmcVZCT2FCVnd1UjdMWng5UU8wQ0Vhc1NIcFo5WHlEbFNHM1h2Sm1jTTFPWGZNN25JQWNZd1QzTkxKa2ZFMktjMUx6bTM1TUZicHZhM0lMai0tN1VqSktKeGRUaUtLVUVUdHV0bytsZz09--4d39568bd2aa91dcdbb43fdeb9f7a07e9b3e4c7a; _hubstaff_auth_session=eUpJTWdYTlAyKzlvSU9wYkxvNjQ2SVRZL2l6Q3kyVXZ0aDlLSkJxZlFYOThvOGhyS1R6ZVFCR3lTeUF1emw1b05vR3JsN21mR3NTZjhsRmFYSFAwdUE0TDQ0Vy9TN1AzRk9jOFRXTnRYR2xrZFZid1BPa1lvaXByUUdlRDJXRk5uMU9OVjR4a0twdzFCVjN2RXd6MFpqSHNpTS9JZkNlR0RiNXBJemRRMEJsaS9NSUpXNnBEa2JBYU1wMmVnaVhCKzg0NVZXTDVjc2VuK1BCZnVMK2RxWncrOUNVUkh4UlpvWEU1cmRtNEN3cDE1a3VTTTh6bDVpRmJtRkdWcjVMRTRENmhUSUwySHFwZ0ZBcFZFT3pFZEd4ZUpidWlBKzNnYXlPWm93OFlONzQ9LS1PSzdwaXhXUXJMdnNJTkVSQjhmSUtnPT0%3D--6f61bf92953415e456330a97e9b5b2d8ed972260; _hubstaff_session=Smlnb3lIVnRoTUJPU3FxU1VWZXc3S3FPQkJGMW1hVUw2ODhwVldoWmVkMG4vVFBOd3Z1cVVSMDZMd0dyTmRycUNFNWV3L3daNzQ5SkJVN1lkZks0Zmh5WHVoZDhPR0MrMnN1WWNXd2pCVGNqY2JJSFlaY0tSaFcwdzBvWHkwbUNaNGttWVdhWTdsQ013NURLMkg1WlZIMG5ycTNtYU1ERXBrSzlWOHhyU1hnb2ZiZjQvQWpxZ1dkTUhUeFpXRE9aZDBxKzRsUEcxa1UwR3pUeEFSZ2dQVDdtU281amJ6d2RWUW5OSGxMY0tScVczUDRDS0xMdVd1c1E5TmdOS29YWXVya010dkx4R0s2Ui8rOXlBcCtsWi9yM0lRZEtqUStJc05sUkdrM3lHcllvQ2JSWmNSZ2xNWWVWQXBVOGFMNlc5enlySDBGbGZLWVliTzE4c3dIRlljaUUyMGFxenlndk9abE5xSDlzMzVsT3NPZ082SGs5TWxPU05qemNEcmpMUnZXTXRVWXNUSGEycXloRUhRa0Z4VmVZV3Q1Vlh1VVJtbGp1ZFo3ejBVND0tLUppTHJUOGI1TVR1WXBlMGtpc1h2Y2c9PQ%3D%3D--51fa6aeb8ca4c6da9970903c3acf0ede30c79864; ajs_group_id=null; ajs_user_id=%221%22; intercom-id=8e35190a-990f-4e2b-aa2b-332930d53f53\",\"Version\":\"HTTP/1.1\"},\"env\":{\"REMOTE_ADDR\":\"::1\",\"SERVER_NAME\":\"localhost\",\"SERVER_PORT\":\"3001\"},\"cookies\":null,\"url\":\"http://localhost:3001/\",\"method\":\"GET\",\"query_string\":\"\",\"data\":\"\"}}")
  }

  describe 'create!' do
    it 'calls error.create!' do
      expect(ErrorStore::Error).to receive(:create!)
      ErrorStore.create!(request)
    end
    it 'returns the error id' do
      # event_id = ErrorStore.create!({})
      # expect(event_id).to be_kind_of(String)
      # expect(event_id.length).to eq(32)
    end
  end

  describe 'find' do
    it 'calls error.find' do
      expect(ErrorStore::Error).to receive(:find)
      subject.find(issue_error)
    end
    it 'returns the error record' do
      expect(ErrorStore::Error).to receive(:find).with(issue_error).and_return(issue_error)
      subject.find(issue_error)
    end
  end

  describe 'find_interfaces' do
    it 'retuns assigns the interfaces_list' do
      expect(ErrorStore.find_interfaces).to eq(
        [
          "/home/sergiu/epiclogger/lib/error_store/interfaces/query.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/frame.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/message.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/exception.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/stacktrace.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/template.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/user.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/single_exception.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/http.rb"
        ]
      )
    end
    it 'contains all the interfaces in the folder' do
      expect(ErrorStore.find_interfaces.length).to eq(9)
    end
  end

  describe 'available_interfaces' do
    it 'returns the interfaces array' do
      expect(ErrorStore.find_interfaces).to eq(
        [
          "/home/sergiu/epiclogger/lib/error_store/interfaces/query.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/frame.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/message.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/exception.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/stacktrace.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/template.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/user.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/single_exception.rb",
          "/home/sergiu/epiclogger/lib/error_store/interfaces/http.rb"
        ]
      )
    end
    it 'gives the interfaces with all of them if find_interfaces called'
  end

  xdescribe 'interfaces_types' do
    it 'returns an array of interfaces types'
  end

  xdescribe 'get_interface' do
    it 'raises ErrorStore::InvalidInterface if not found'
    it 'returns the interface'
  end

  describe 'constants' do
    it 'INTERFACES holds the interfaces' do
      expect(ErrorStore::INTERFACES).to eq(
        {
          :exception=>:exception,
          :logentry=>:message,
          :request=>:http,
          :stacktrace=>:stacktrace,
          :template=>:template,
          :query=>:query,
          :user=>:user,
          :csp=>:csp,
          :http=>:http,
          :"sentry.interfaces.Exception"=>:exception,
          :"sentry.interfaces.Message"=>:message,
          :"sentry.interfaces.Stacktrace"=>:stacktrace,
          :"sentry.interfaces.Template"=>:template,
          :"sentry.interfaces.Query"=>:query,
          :"sentry.interfaces.Http"=>:http,
          :"sentry.interfaces.User"=>:user,
          :"sentry.interfaces.Csp"=>:csp
        }
      )
    end
    it 'CLIENT_RESERVED_ATTRS holds the reserved attrs' do
      expect(ErrorStore::CLIENT_RESERVED_ATTRS).to eq(
        [
          :website,
          :errors,
          :event_id,
          :message,
          :checksum,
          :culprit,
          :fingerprint,
          :level,
          :time_spent,
          :logger,
          :server_name,
          :site,
          :timestamp,
          :extra,
          :modules,
          :tags,
          :platform,
          :release,
          :environment,
          :interfaces
        ]
      )
    end
    it 'VALID_PLATFORMS holds all platforms' do
      expect(ErrorStore::VALID_PLATFORMS).to eq(
        [
          "as3", "c", "cfml", "csharp", "go", "java", "javascript", "node", "objc", "other", "perl", "php", "python", "ruby"
        ]
      )
    end
    it 'LOG_LEVELS defines the log levels' do
      expect(ErrorStore::LOG_LEVELS).to eq({10=>"debug", 20=>"info", 30=>"warning", 40=>"error", 50=>"fatal"})
    end
    it 'SAMPLE_RATES all sample rates' do
      expect(ErrorStore::SAMPLE_RATES).to eq([[50, 1], [1000, 2], [10000, 10], [100000, 50], [1000000, 300], [10000000, 2000]])
    end
    it 'MAX_SAMPLE_RATE equals max rate' do
      expect(ErrorStore::MAX_SAMPLE_RATE).to eq(10000)
    end
    it 'SAMPLE_TIMES equals sample times' do
      expect(ErrorStore::SAMPLE_TIMES).to eq([[3600, 1], [360, 10], [60, 60]])
    end
    it 'MAX_SAMPLE_TIME equals max sample time' do
      expect(ErrorStore::MAX_SAMPLE_TIME).to eq(10000)
    end
    it 'CURRENT_VERSION equals to current version' do
      expect(ErrorStore::CURRENT_VERSION).to eq('5')
    end
    it 'DEFAULT_LOG_LEVEL equals to error' do
      expect(ErrorStore::DEFAULT_LOG_LEVEL).to eq('error')
    end
    it 'DEFAULT_LOGGER_NAME equals nil' do
      expect(ErrorStore::DEFAULT_LOGGER_NAME).to eq('')
    end
    it 'MAX_STACKTRACE_FRAMES equals to 50 frames kept' do
      expect(ErrorStore::MAX_STACKTRACE_FRAMES).to eq(50)
    end
    it 'MAX_HTTP_BODY_SIZE equals to 16kb' do
      expect(ErrorStore::MAX_HTTP_BODY_SIZE).to eq(16384)
    end
    it 'MAX_EXCEPTIONS has 25 max exceptions' do
      expect(ErrorStore::MAX_EXCEPTIONS).to eq(25)
    end
    it 'MAX_HASH_ITEMS gives the 50 max items' do
      expect(ErrorStore::MAX_HASH_ITEMS).to eq(50)
    end
    it 'MAX_VARIABLE_SIZE gives the max var size (512)' do
      expect(ErrorStore::MAX_VARIABLE_SIZE).to eq(512)
    end
    it 'MAX_CULPRIT_LENGTH returns the max culprit allowed' do
      expect(ErrorStore::MAX_CULPRIT_LENGTH).to eq(200)
    end
    it 'MAX_MESSAGE_LENGTH returns the message length' do
      expect(ErrorStore::MAX_MESSAGE_LENGTH).to eq(8192)
    end
    it 'HTTP_METHODS returns all the methods allowed' do
      expect(ErrorStore::HTTP_METHODS).to eq(["GET", "POST", "PUT", "OPTIONS", "HEAD", "DELETE", "TRACE", "CONNECT", "PATCH"])
    end
  end

  describe 'exceptions' do
    it 'has StoreError exception' do
      expect { raise ErrorStore::StoreError }.to raise_error(ErrorStore::StoreError)
    end
    it 'has all the other exceptions' do
      expect { raise ErrorStore::MissingCredentials }.to raise_error(ErrorStore::MissingCredentials)
      expect { raise ErrorStore::WebsiteMissing }.to raise_error(ErrorStore::WebsiteMissing)
      expect { raise ErrorStore::BadData }.to raise_error(ErrorStore::BadData)
      expect { raise ErrorStore::InvalidTimestamp }.to raise_error(ErrorStore::InvalidTimestamp)
      expect { raise ErrorStore::InvalidFingerprint }.to raise_error(ErrorStore::InvalidFingerprint)
      expect { raise ErrorStore::InvalidAttribute }.to raise_error(ErrorStore::InvalidAttribute)
      expect { raise ErrorStore::InvalidInterface }.to raise_error(ErrorStore::InvalidInterface)
      expect { raise ErrorStore::ValidationError }.to raise_error(ErrorStore::ValidationError)
    end
  end
end
